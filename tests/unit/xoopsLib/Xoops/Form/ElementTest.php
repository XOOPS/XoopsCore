<?php
require_once(dirname(__FILE__).'/../../../init_new.php');

use Xoops\Form\Element;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-08-18 at 21:59:24.
 */
 
/**
 * PHPUnit special settings :
 * @backupGlobals disabled
 * @backupStaticAttributes disabled
 */

class ElementTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Element
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = $this->getMockForAbstractClass('Xoops\Form\Element');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Xoops\Form\Element::setAttribute
     */
    public function testSetAttribute()
    {
        // see Xoops\Html\AttributesTest
    }

    /**
     * @covers Xoops\Form\Element::getAttribute
     */
    public function testGetAttribute()
    {
        // see Xoops\Html\AttributesTest
    }

    /**
     * @covers Xoops\Form\Element::hasAttribute
     */
    public function testHasAttribute()
    {
        // see Xoops\Html\AttributesTest
    }

    /**
     * @covers Xoops\Form\Element::addAttribute
     */
    public function testAddAttribute()
    {
        // see Xoops\Html\AttributesTest
    }

    /**
     * @covers Xoops\Form\Element::renderAttributeString
     */
    public function testRenderAttributeString()
    {
        $instance = $this->object;
        
        $arrAttr = array('title' => 'title_value', 'name' => 'name_value[]');
        $instance->setAttributes($arrAttr);
        
        $value = $instance->renderAttributeString();
        $expected = 'title="title_value" name="name_value[]" id="name_value" ';
        $this->assertSame($expected,$value);
    }
    
    public function testRenderAttributeString100()
    {
        $instance = $this->object;
        
        $arrAttr = array('title' => 'title_value');
        $instance->setAttributes($arrAttr);
        
        $value = $instance->renderAttributeString();
        $expected = 'title="title_value" ';
        $this->assertSame($expected,$value);
    }
    
    public function testRenderAttributeString120()
    {
        $instance = $this->object;
        
        $arrAttr = array('title' => 'title_value', 'id'=>100);
        $instance->setAttributes($arrAttr);
        
        $value = $instance->renderAttributeString();
        $expected = 'title="title_value" id="100" ';
        $this->assertSame($expected,$value);
    }

    /**
     * @covers Xoops\Form\Element::getValue
     */
    public function testGetValue()
    {
        $name = 'name';
        $this->object->setValue($name);
        $value = $this->object->getValue();
        $this->assertSame($name, $value);
        
        $names = array('name1', 'name2');
        $this->object->setValue($names);
        $value = $this->object->getValue();
        $tmp = $names;
        array_unshift($tmp, $name);
        $this->assertSame($tmp, $value);
    }

    /**
     * @covers Xoops\Form\Element::setValue
     */
    public function testSetValue()
    {
        // see testGetValue
    }

    /**
     * @covers Xoops\Form\Element::setName
     */
    public function testSetName()
    {
        // see testGetName
    }

    /**
     * @covers Xoops\Form\Element::getName
     */
    public function testGetName()
    {
        $name = 'name';
        $this->object->setName($name);
        $value = $this->object->getName();
        $this->assertSame($name, $value);
    }

    /**
     * @covers Xoops\Form\Element::setAccessKey
     */
    public function testSetAccessKey()
    {
        // see testGetAccessKey
    }

    /**
     * @covers Xoops\Form\Element::getAccessKey
     */
    public function testGetAccessKey()
    {
        $key = 'name';
        $this->object->setAccessKey($key);
        $value = $this->object->getAccessKey();
        $this->assertSame($key, $value);
    }

    /**
     * @covers Xoops\Form\Element::getAccessString
     */
    public function testGetAccessString()
    {
        $instance = $this->object;
        
        $key = 'name';
        $instance->setAccessKey($key);

        $str = 'this sentence contains name';
        $result = $instance->getAccessString($str);
        
        $expected = '<span style="text-decoration: underline;">n</span>ame';
        $this->assertTrue(false !== strpos($result, $expected));
        
        $str = 'this sentence contains no access string';
        $result = $instance->getAccessString($str);
        $this->assertSame($str, $result);
    }

    /**
     * @covers Xoops\Form\Element::setClass
     */
    public function testSetClass()
    {
        // set testGetClass
    }

    /**
     * @covers Xoops\Form\Element::getClass
     */
    public function testGetClass()
    {
        $name = 'name';
        $this->object->setClass($name);
        $value = $this->object->getClass();
        $this->assertSame($name, $value);
    }

    /**
     * @covers Xoops\Form\Element::setPattern
     */
    public function testSetPattern()
    {
        // see testGetPattern
    }

    /**
     * @covers Xoops\Form\Element::getPattern
     */
    public function testGetPattern()
    {
        $name = 'name';
        $this->object->setPattern($name);
        $value = $this->object->getPattern();
        $this->assertSame($name, $value);
    }

    /**
     * @covers Xoops\Form\Element::getPatternDescription
     */
    public function testGetPatternDescription()
    {
        $instance = $this->object;
        
        $name = 'name';
        $instance->setPattern($name);
        
        $result = $instance->getPatternDescription();
        $this->assertSame('',$result);
        
        $name = 'name';
        $pattern = 'pattern';
        $instance->setPattern($name, $pattern);
        
        $result = $instance->getPatternDescription();
        $this->assertSame($pattern,$result);
    }

    /**
     * @covers Xoops\Form\Element::setDatalist
     */
    public function testSetDatalist()
    {
        // see testGetDatalist
    }

    /**
     * @covers Xoops\Form\Element::getDatalist
     * @todo   Implement testGetDatalist().
     */
    public function testGetDatalist()
    {
        $instance = $this->object;
        
        $result = $instance->getDatalist();
        $this->assertSame('', $result);
        
        $name = 'name';
        $instance->setName($name);
        
        $data = 'data';
        $instance->setDatalist($data);
        
        $result = $instance->getDatalist();
        $expected = "\n" . '<datalist id="list_' . $name . '">' . "\n";
        $expected .= '<option value="' . htmlspecialchars($data, ENT_QUOTES) . '">' . "\n";
        $expected .= '</datalist>' . "\n";
        
        $this->assertSame($expected, $result);
    }
    
    public function testGetDatalist100()
    {
        $instance = $this->object;
        
        $result = $instance->getDatalist();
        $this->assertSame('', $result);
        
        $name = 'name';
        $instance->setName($name);
        
        $data = array('key1'=>'value1','key2'=>'value2',);
        $instance->setDatalist($data);
        
        $result = $instance->getDatalist();
        $expected = "\n" . '<datalist id="list_' . $name . '">' . "\n";
        foreach ($data as $item) {
            $expected .= '<option value="' . htmlspecialchars($item, ENT_QUOTES) . '">' . "\n";
        }
        $expected .= '</datalist>' . "\n";
        
        $this->assertSame($expected, $result);
    }

    /**
     * @covers Xoops\Form\Element::isDatalist
     */
    public function testIsDatalist()
    {
        $instance = $this->object;
        
        $result = $instance->isDatalist();
        $this->assertFalse($result);
        
        $data = 'data';
        $instance->setDatalist($data);
        
        $result = $instance->isDatalist();
        $this->assertTrue($result);
    }

    /**
     * @covers Xoops\Form\Element::setCaption
     */
    public function testSetCaption()
    {
        // see testGetCaption
    }

    /**
     * @covers Xoops\Form\Element::getCaption
     */
    public function testGetCaption()
    {
        $name = 'name';
        $this->object->setCaption($name);
        $value = $this->object->getCaption();
        $this->assertSame($name, $value);
    }

    /**
     * @covers Xoops\Form\Element::setTitle
     */
    public function testSetTitle()
    {
        // see testGetTitle
    }

    /**
     * @covers Xoops\Form\Element::getTitle
     */
    public function testGetTitle()
    {
        $name = 'name';
        $this->object->setTitle($name);
        $value = $this->object->getTitle();
        $this->assertSame($name, $value);
    }

    /**
     * @covers Xoops\Form\Element::setDescription
     */
    public function testSetDescription()
    {
        // see testGetDescription
    }

    /**
     * @covers Xoops\Form\Element::getDescription
     */
    public function testGetDescription()
    {
        $name = 'name';
        $this->object->setDescription($name);
        $value = $this->object->getDescription();
        $this->assertSame($name, $value);
    }

    /**
     * @covers Xoops\Form\Element::setHidden
     */
    public function testSetHidden()
    {
        // see testIsHidden
    }

    /**
     * @covers Xoops\Form\Element::isHidden
     */
    public function testIsHidden()
    {
        $value = $this->object->isHidden();
        $this->assertFalse($value);
        $this->object->setHidden();
        $value = $this->object->isHidden();
        $this->assertTrue($value);
    }

    /**
     * @covers Xoops\Form\Element::setRequired
     */
    public function testSetRequired()
    {
        // see testIsRequired
    }

    /**
     * @covers Xoops\Form\Element::isRequired
     */
    public function testIsRequired()
    {
        $value = $this->object->isRequired();
        $this->assertFalse($value);
        $this->object->setRequired();
        $value = $this->object->isRequired();
        $this->assertTrue($value);
    }

    /**
     * @covers Xoops\Form\Element::setExtra
     */
    public function testSetExtra()
    {
        // see testGetExtra
    }

    /**
     * @covers Xoops\Form\Element::getExtra
     */
    public function testGetExtra()
    {
        $name = 'name';
        $this->object->setExtra($name);
        $value = $this->object->getExtra();
        $this->assertSame($name, $value);
    }

    /**
     * @covers Xoops\Form\Element::renderValidationJS
     */
    public function testRenderValidationJS()
    {
        $value = $this->object->renderValidationJS();
        $this->assertFalse($value);
    }

    /**
     * @covers Xoops\Form\Element::getMaxcols
     */
    public function testGetMaxcols()
    {
        $value = $this->object->getMaxcols();
        $this->assertTrue(is_int($value));
    }
}
