<?php
namespace Xoops\Form;

require_once(dirname(__FILE__).'/../../../init_new.php');

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-08-18 at 21:59:25.
 */
 
/**
 * PHPUnit special settings :
 * @backupGlobals disabled
 * @backupStaticAttributes disabled
 */

class RadioTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Radio
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Radio('Caption', 'name');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Xoops\Form\Radio::getValue
     */
    public function testGetValue()
    {
        $object = new Radio('Caption', 'name', 'value');
        $value = $object->getValue();
        $this->assertSame('value', $value);
    }

    /**
     * @covers Xoops\Form\Radio::addOption
     */
    public function testAddOption()
    {
        $this->object->addOption('key', 'value');
        $this->object->addOption('just_key');
        $value = $this->object->getOptions();
        $this->assertTrue(is_array($value));
        $this->assertSame('value', $value['key']);
        $this->assertSame('just_key', $value['just_key']);
    }

    /**
     * @covers Xoops\Form\Radio::addOptionArray
     */
    public function testAddOptionArray()
    {
        $this->object->addOptionArray(array('key' => 'value', 'just_key' => null));
        $value = $this->object->getOptions();
        $this->assertTrue(is_array($value));
        $this->assertSame('value', $value['key']);
        $this->assertSame('just_key', $value['just_key']);
    }

    /**
     * @covers Xoops\Form\Radio::getOptions
     */
    public function testGetOptions()
    {
        // see testAddOption
    }

    /**
     * @covers Xoops\Form\Radio::getInline
     */
    public function testGetInline()
    {
        $value = $this->object->getInline();
        $this->assertSame(' inline', $value);
        
        $this->object = new Radio('Caption', 'name', 'value', false);
        $value = $this->object->getInline();
        $this->assertSame('', $value);
    }

    /**
     * @covers Xoops\Form\Radio::render
     */
    public function testRender()
    {
        $this->object->addOption('key', 'value');
        $value = $this->object->render();
        $this->assertTrue(is_string($value));
        $this->assertTrue(false !== strpos($value, '<label class="radio'));
        $this->assertTrue(false !== strpos($value, '<input type="radio"'));
    }
}
