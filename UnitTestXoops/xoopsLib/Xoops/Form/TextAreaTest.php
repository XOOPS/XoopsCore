<?php
namespace Xoops\Form;

require_once(dirname(__FILE__).'/../../../init_mini.php');

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-08-18 at 21:59:26.
 */
 
/**
 * PHPUnit special settings :
 * @backupGlobals disabled
 * @backupStaticAttributes disabled
 */

class TextAreaTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var TextArea
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new TextArea('Caption', 'name', 'value', 5, 10, 'placeholder');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Xoops\Form\TextArea::getRows
     */
    public function testGetRows()
    {
        $value = $this->object->getRows();
        $this->assertSame(5, $value);
    }

    /**
     * @covers Xoops\Form\TextArea::getCols
     */
    public function testGetCols()
    {
        $value = $this->object->getCols();
        $this->assertSame(10, $value);
    }

    /**
     * @covers Xoops\Form\TextArea::getPlaceholder
     */
    public function testGetPlaceholder()
    {
        $value = $this->object->getPlaceholder();
        $this->assertSame('placeholder', $value);
    }

    /**
     * @covers Xoops\Form\TextArea::render
     */
    public function testRender()
    {
        $value = $this->object->render();
        $this->assertTrue(is_string($value));
        $this->assertTrue(false !== strpos($value, '<textarea'));
        $this->assertTrue(false !== strpos($value, 'name="name"'));
        $this->assertTrue(false !== strpos($value, 'rows="5"'));
        $this->assertTrue(false !== strpos($value, 'cols="10"'));
        $this->assertTrue(false !== strpos($value, 'placeholder="placeholder"'));
        $this->assertTrue(false !== strpos($value, 'title="Caption"'));
        $this->assertTrue(false !== strpos($value, 'id="name"'));
        $this->assertTrue(false !== strpos($value, '>value<'));
    }
}
