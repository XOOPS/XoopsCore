<?php
namespace Xoops\Form;

require_once(dirname(__FILE__).'/../../../init_mini.php');

/**
 * Generated by PHPUnit_SkeletonGenerator on 2014-08-18 at 21:59:24.
 */
 
/**
 * PHPUnit special settings :
 * @backupGlobals disabled
 * @backupStaticAttributes disabled
 */

class FormTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Form
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = $this->getMockForAbstractClass('Xoops\Form\Form', array('title', 'name', 'action'));

    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers Xoops\Form\Form::getDisplay
     */
    public function testGetDisplay()
    {
        $value = $this->object->getDisplay();
        $this->assertSame('', $value);
    }

    /**
     * @covers Xoops\Form\Form::getTitle
     */
    public function testGetTitle()
    {
        $value = $this->object->getTitle();
        $this->assertSame('title', $value);
    }

    /**
     * @covers Xoops\Form\Form::setTitle
     */
    public function testSetTitle()
    {
        $name = 'form_name';
        $this->object->setTitle($name);
        $value = $this->object->getTitle();
        $this->assertSame($name, $value);
    }

    /**
     * @covers Xoops\Form\Form::getName
     */
    public function testGetName()
    {
        $value = $this->object->getName();
        $this->assertSame('name', $value);
    }

    /**
     * @covers Xoops\Form\Form::setAction
     */
    public function testSetAction()
    {
        // see testGetAction
    }

    /**
     * @covers Xoops\Form\Form::getAction
     */
    public function testGetAction()
    {
        $name = 'form_name';
        $this->object->setAction($name);
        $value = $this->object->getAction();
        $this->assertSame($name, $value);
    }

    /**
     * @covers Xoops\Form\Form::getMethod
     */
    public function testGetMethod()
    {
        $value = $this->object->getMethod();
        $this->assertSame('post', $value);
    }

    /**
     * @covers Xoops\Form\Form::addElement
     */
    public function testAddElement()
    {
        // see testGetElements
    }

    /**
     * @covers Xoops\Form\Form::getElements
     */
    public function testGetElements()
    {
        $button = new Button('button_caption', 'button_name');
        $this->object->addElement($button, true);
        $value = $this->object->getElements();
        $this->assertTrue(is_array($value));
        $this->assertInstanceOf('Xoops\Form\Button', $value[0]);
        
        $value = $this->object->getElementNames();
        $this->assertTrue(is_array($value));
        $this->assertSame('button_name', $value[0]);
        
        $value = $this->object->getElementByName('button_name');
        $this->assertInstanceOf('Xoops\Form\Button', $value);
        
        $value = $this->object->getElementByName('button_doesnt_exist');
        $this->assertSame(null, $value);
    }

    /**
     * @covers Xoops\Form\Form::getElementNames
     */
    public function testGetElementNames()
    {
        // see testGetElements
    }

    /**
     * @covers Xoops\Form\Form::getElementByName
     */
    public function testGetElementByName()
    {
        // see testGetElements
    }

    /**
     * @covers Xoops\Form\Form::setElementValue
     * @todo   Implement testSetElementValue().
     */
    public function testSetElementValue()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\Form\Form::setElementValues
     * @todo   Implement testSetElementValues().
     */
    public function testSetElementValues()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\Form\Form::getElementValue
     * @todo   Implement testGetElementValue().
     */
    public function testGetElementValue()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\Form\Form::getElementValues
     * @todo   Implement testGetElementValues().
     */
    public function testGetElementValues()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\Form\Form::setExtra
     */
    public function testSetExtra()
    {
        // see testGetExtra
    }

    /**
     * @covers Xoops\Form\Form::setSummary
     * @todo   Implement testSetSummary().
     */
    public function testSetSummary()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\Form\Form::getExtra
     */
    public function testGetExtra()
    {
        $name = 'form_name';
        $this->object->setExtra($name);
        $value = $this->object->getExtra();
        $this->assertSame(' '.$name, $value);
    }

    /**
     * @covers Xoops\Form\Form::setRequired
     */
    public function testSetRequired()
    {
        // see testGetRequired
    }

    /**
     * @covers Xoops\Form\Form::getRequired
     */
    public function testGetRequired()
    {
        $button = new Button('button_caption', 'button_name');
        $this->object->setRequired($button);
        $value = $this->object->getRequired();
        $this->assertTrue(is_array($value));
        $this->assertInstanceOf('Xoops\Form\Button', $value[0]);
    }

    /**
     * @covers Xoops\Form\Form::display
     * @todo   Implement testDisplay().
     */
    public function testDisplay()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
            'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Xoops\Form\Form::renderValidationJS
     */
    public function testRenderValidationJS()
    {
        $value = $this->object->renderValidationJS();
        $this->assertTrue(is_string($value));
        $this->assertTrue(false !== strpos($value,'Start Form Validation JavaScript'));
    }

    /**
     * @covers Xoops\Form\Form::assign
     * @todo   Implement testAssign().
     */
    public function testAssign()
    {
        // Remove the following lines when you implement this test.
        $this->markTestSkipped();
    }
}
